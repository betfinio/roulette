/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LiveRouletteImport } from './routes/live-roulette'
import { Route as IndexImport } from './routes/index'
import { Route as RouletteIndexImport } from './routes/roulette/index'
import { Route as RouletteSingleIndexImport } from './routes/roulette/single/index'
import { Route as RouletteLiveTableImport } from './routes/roulette/live/$table'

// Create/Update Routes

const LiveRouletteRoute = LiveRouletteImport.update({
  id: '/live-roulette',
  path: '/live-roulette',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RouletteIndexRoute = RouletteIndexImport.update({
  id: '/roulette/',
  path: '/roulette/',
  getParentRoute: () => rootRoute,
} as any)

const RouletteSingleIndexRoute = RouletteSingleIndexImport.update({
  id: '/roulette/single/',
  path: '/roulette/single/',
  getParentRoute: () => rootRoute,
} as any)

const RouletteLiveTableRoute = RouletteLiveTableImport.update({
  id: '/roulette/live/$table',
  path: '/roulette/live/$table',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/live-roulette': {
      id: '/live-roulette'
      path: '/live-roulette'
      fullPath: '/live-roulette'
      preLoaderRoute: typeof LiveRouletteImport
      parentRoute: typeof rootRoute
    }
    '/roulette/': {
      id: '/roulette/'
      path: '/roulette'
      fullPath: '/roulette'
      preLoaderRoute: typeof RouletteIndexImport
      parentRoute: typeof rootRoute
    }
    '/roulette/live/$table': {
      id: '/roulette/live/$table'
      path: '/roulette/live/$table'
      fullPath: '/roulette/live/$table'
      preLoaderRoute: typeof RouletteLiveTableImport
      parentRoute: typeof rootRoute
    }
    '/roulette/single/': {
      id: '/roulette/single/'
      path: '/roulette/single'
      fullPath: '/roulette/single'
      preLoaderRoute: typeof RouletteSingleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/live-roulette': typeof LiveRouletteRoute
  '/roulette': typeof RouletteIndexRoute
  '/roulette/live/$table': typeof RouletteLiveTableRoute
  '/roulette/single': typeof RouletteSingleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/live-roulette': typeof LiveRouletteRoute
  '/roulette': typeof RouletteIndexRoute
  '/roulette/live/$table': typeof RouletteLiveTableRoute
  '/roulette/single': typeof RouletteSingleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/live-roulette': typeof LiveRouletteRoute
  '/roulette/': typeof RouletteIndexRoute
  '/roulette/live/$table': typeof RouletteLiveTableRoute
  '/roulette/single/': typeof RouletteSingleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/live-roulette'
    | '/roulette'
    | '/roulette/live/$table'
    | '/roulette/single'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/live-roulette'
    | '/roulette'
    | '/roulette/live/$table'
    | '/roulette/single'
  id:
    | '__root__'
    | '/'
    | '/live-roulette'
    | '/roulette/'
    | '/roulette/live/$table'
    | '/roulette/single/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LiveRouletteRoute: typeof LiveRouletteRoute
  RouletteIndexRoute: typeof RouletteIndexRoute
  RouletteLiveTableRoute: typeof RouletteLiveTableRoute
  RouletteSingleIndexRoute: typeof RouletteSingleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LiveRouletteRoute: LiveRouletteRoute,
  RouletteIndexRoute: RouletteIndexRoute,
  RouletteLiveTableRoute: RouletteLiveTableRoute,
  RouletteSingleIndexRoute: RouletteSingleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/live-roulette",
        "/roulette/",
        "/roulette/live/$table",
        "/roulette/single/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/live-roulette": {
      "filePath": "live-roulette.tsx"
    },
    "/roulette/": {
      "filePath": "roulette/index.tsx"
    },
    "/roulette/live/$table": {
      "filePath": "roulette/live/$table.tsx"
    },
    "/roulette/single/": {
      "filePath": "roulette/single/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
